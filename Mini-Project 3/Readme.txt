A lot of the functions found here were provided by Professor Wen. Functions rotx, roty, rotz, and vee were written by myself but are very simple. The two main pieces of code written for this assignment are invkin.m and Project3.m. invkin.m is the inverse kinematics function used for this assignment using subproblem decomposition. Project3 is the driving code that finds all of the necessary outputs for the assignment. The code requires no inputs besides the S_sphere_path mat file. Part 1 operates simply using plotting commands, and basic provided functions. Part 2a simply defines paramters for POE, SDH and MDH. Part 2b and 2c test the forward and inverse kinematics code using the same auto-generated q, which is output into the command window, along with the error checks and the 8 solutions of the inverse kinematics. 2d simply uses a modified version of the provided kincheckelbow file repurposed into a generic function. 3 finds all 8 solutions for the pathing of the S, and displays a chosen one of ksol. It's set to 7 as 7 is the fastest solution. 3 Velocity Work finds the constant lambda_dot speed to determine the fastest path, and also finds the q3 range of all 8 solutions. Part 4 is based off of the proj3example code, as much of this is
